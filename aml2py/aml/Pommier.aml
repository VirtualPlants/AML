# shell : aml 
#----------------------------------------------------------------#
# LOG FILE : Nov  5 2002 created by GODIN
# File Generated by AMAPmod 2.0 on Windows NT 5.0 (Service Pack 2)
#----------------------------------------------------------------#
#
 
dir = "\examples\MSVoxelDataBase\"
file = "Pommier"

g  = MTG(AMAPMOD_DIR + "/databases/MTGFiles/AppleTree/agraf.mtg")
dr1 = DressingData(AMAPMOD_DIR + "/examples/MTG/VirtualPatterns/" + "appletree.drf")
f1 = PlantFrame(1, Scale->3, DressingData->dr1)
# Plot(f1)
leaf_dia(_x) = 6*ToInt(If Length(f1,_x) < 10 Then 100 Else If Length(f1,_x) > 30 Then 300 Else Length(f1,_x)*10)
# leaf_len(_x) = If Length(f1,_x) > 30 Then leaf_dia(_x)/40 Else leaf_dia(_x)/10
leaf_len(_x) = leaf_dia(_x)/10

nbleaves(_v)=  If (Index(Complex(_v,Scale->2))==96) Then 1 Else 0
verticille(_v)=1
leaf_color(_v)=Red

leaves1=VirtualPattern("Leaf",\
                        WhorlSize->verticille, \
                        PatternNumber->nbleaves, \
                        Color->leaf_color, \
                        TopDiameter->leaf_dia, \
                        Length->leaf_len)

filter(_x) = If Defined(_x) Then False Else True

VDepth = 3
divisionsteps = 3
lt = Plot(f1,VirtualLeaves->leaves1,DressingData->dr1, Show->filter)
mvs = MSVoxel(lt, DivisionSteps->[divisionsteps], Depth->VDepth)
Plot(mvs)

ToArrayReal(_array) = Foreach _i In _array : ToReal(_i)
Inv(_array) = Foreach _i In _array : 1.0/_i
LogArray(_array) = Foreach _i In _array : Log(_i)
ToStringArray(_array) = "" Foreach _i In _array : + ToString(_i)

e1 = Extract(mvs,ScaleVariation->BuilderStats,BuilderStats->ElapsedTime)
Save(e1,AMAPMOD_DIR + dir + file + "\_" + ToString(VDepth) + "_" + ToString(divisionsteps) + "_ElapsedTime.txt",Format->SpreadSheet)

e2 = ToArrayReal(Extract(mvs,ScaleVariation->BuilderStats,BuilderStats->NbTriangles))
Save(e2,AMAPMOD_DIR + dir + file + "\_" + ToString(VDepth) + "_" + ToString(divisionsteps) + "_NbTriangles.txt",Format->SpreadSheet)

e3 = ToArrayReal(Extract(mvs,ScaleVariation->Units, Units->Contraction))
Save(e3,AMAPMOD_DIR + dir + file + "\_" + ToString(VDepth) + "_" + ToString(divisionsteps) + "_Contraction.txt",Format->SpreadSheet)
Save(LogArray(e3), AMAPMOD_DIR + "\MSVoxelDataBase\" + file + "\_" + ToString(VDepth) + "_" + ToString(divisionsteps) + "_LogInvDelta.txt",Format->SpreadSheet)

e4 = Extract(mvs,ScaleVariation->Units, Units->Volume)
Save(e4,AMAPMOD_DIR + dir + file + "\_" + ToString(VDepth) + "_" + ToString(divisionsteps) + "_VolumeVoxel.txt",Format->SpreadSheet)

e5 = ToArrayReal(Extract(mvs,ScaleVariation->InterceptedVoxels))
Save(e5,AMAPMOD_DIR + "\MSVoxelDataBase\" + file + "\_" + ToString(VDepth) + "_" + ToString(divisionsteps) + "_InterceptedVoxels.txt",Format->SpreadSheet)
Save(LogArray(e5), AMAPMOD_DIR + dir + file + "\_" + ToString(VDepth) + "_" + ToString(divisionsteps) + "_LogInterceptedVoxels.txt",Format->SpreadSheet)

e6 = Extract(mvs,ScaleVariation->Volume)
Save(LogArray(e6),AMAPMOD_DIR + dir + file + "\_" + ToString(VDepth) + "_" + ToString(divisionsteps) + "_LogVolume.txt",Format->SpreadSheet)

radius = [1:27]
Save(radius, AMAPMOD_DIR + dir + file + "\_" + ToString(VDepth) + "_" + ToString(divisionsteps) + "_radius.txt",Format->SpreadSheet)

e7 = Extract(mvs,Lacunarity->radius)
Save(e7,AMAPMOD_DIR + dir + file + "\_" + ToString(VDepth) + "_" + ToString(divisionsteps) + "_Lacunarity.txt",Format->SpreadSheet)
